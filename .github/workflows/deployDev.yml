name: Deploy dev build to S3

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
    #branches:
    #  - master

  #pull_request:
  #  branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy-dev"
  deploy-dev:
    name: Build and Deploy Image
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      # default build directory
      BUILD_FOLDER: 'build'
      VERSION: 'latest'

      # rename necessary variables used in the app
      REACT_APP_APPS_DEVELOPER_ID: ${{ secrets.APPS_DEVELOPER_ID }}
      REACT_APP_APP_ID: ${{ secrets.APP_ID }}
      REACT_APP_VERSION: 'latest'
      REACT_APP_GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
      REACT_APP_GRAASP_DOMAIN: ${{ secrets.DEV_GRAASP_DOMAIN }}
      REACT_APP_GRAASP_APP_ID: ${{ secrets.APP_ID }}
      REACT_APP_MOCK_API: false
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true

      - name: Yarn build dev
        id: build-image
        run: |
          yarn install
          REACT_APP_GRAASP_DOMAIN REACT_APP_GRAASP_APP_ID REACT_APP_MOCK_API yarn build

      - name: Configure AWS Credentials
        id: configure-aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.APPS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.APPS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.APPS_AWS_REGION }}

      - name: Sync files with AWS S3 Bucket
        id: sync-s3
        env:
          APP_DIR: '${{ secrets.APPS_DEV_BUCKET }}/${{ secrets.APP_ID }}/${{env.VERSION}}/'
      # --acl public-read makes files publicly readable 
      # --follow-symlinks fixes some weird symbolic link problems that may come up
      # --delete permanently deletes files in the S3 bucket that are not present in the latest version of the repository/build.
        run: aws s3 sync ${{env.BUILD_FOLDER}} s3://${APP_DIR} --acl public-read --follow-symlinks --delete

      - name: Invalidate cloudfront distribution
        id: invalidate-cloudfront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.APPS_DEV_CLOUDFRONT_DISTRIBUTION }} --paths /${{ secrets.APP_ID }}/*